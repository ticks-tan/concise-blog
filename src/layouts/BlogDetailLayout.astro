---
import type { CollectionEntry } from "astro:content";
import PageLayout from "~/layouts/BaseLayout.astro";
import BlogToc from "~/components/blog/BlogToc.astro";
import BlogHero from "~/components/blog/BlogHero.astro";
import Header from "~/components/layout/Header.astro";
import Footer from "~/components/layout/Footer.astro";
import { cn } from "~/utils/tailwind";
import { siteConfig } from "~/site.config";

interface Props {
	blog: CollectionEntry<"blog">;
}

const { blog } = Astro.props;

const { headings } = await blog.render();

const meta = {
	title: blog.data.title,
	description: blog.data.description || "",
};

const proseStyle =
	siteConfig.proseStyle && siteConfig.proseStyle.length > 0
		? siteConfig.proseStyle!
		: null;
---

<PageLayout meta={meta}>
	<Header />
	<div class="w-full my-8">
		<a
			class={cn(
				"inline-flex items-center gap-x-1 rounded-md border border-border",
				"px-2 py-1 text-sm transition-all hover:bg-on-background/10"
			)}
			href="/blog"
			data-astro-prefetch
		>
			<svg
				xmlns="http://www.w3.org/2000/svg"
				width="14"
				height="14"
				viewBox="0 0 24 24"
				slot="icon-before"
			>
				<path
					fill="currentColor"
					d="m6.921 12.5l5.792 5.792L12 19l-7-7l7-7l.713.708L6.921 11.5H19v1z"
				>
				</path>
			</svg>
			<p>{"Go Back"}</p>
		</a>
		<main class="mt-8 gap-x-10 lg:flex lg:items-start">
			{
				!!headings.length && (
					<BlogToc headings={headings} className="lg:w-1/4" />
				)
			}
			<article class="flex-grow break-words lg:w-3/4" data-pagefind-body>
				<div id="blog-hero" class="">
					<BlogHero blog={blog} />
				</div>
				<div
					class={cn(
						proseStyle ??
							cn(
								"prose prose-base prose-neutral md:prose-lg dark:prose-invert",
								"prose-headings:font-medium prose-headings:text-foreground prose-headings:before:absolute prose-headings:before:-ms-4"
							),
						"mt-8 text-on-background"
					)}
				>
					<!-- 博客内容 -->
					<slot />
				</div>
			</article>
			<!-- 返回顶部按钮 -->
			<button
				aria-label="Back to Top"
				class="z-40 fixed bottom-8 end-4 flex h-8 w-8 translate-y-28 items-center justify-center rounded-full border-2 border-transparent bg-secondary-container text-3xl opacity-0 transition-all duration-300 hover:border-border/75 data-[show=true]:translate-y-0 data-[show=true]:opacity-100 sm:end-8 sm:h-12 sm:w-12"
				data-show="false"
				id="ScrollTopBtn"
				><svg
					aria-hidden="true"
					class="h-4 w-4 fill-on-secondary-container"
					focusable="false"
					stroke="currentColor"
					stroke-width="2"
					viewBox="0 0 24 24"
					xmlns="http://www.w3.org/2000/svg"
				>
					<path
						d="M4.5 15.75l7.5-7.5 7.5 7.5"
						stroke-linecap="round"
						stroke-linejoin="round"></path>
				</svg>
			</button>
		</main>
	</div>
	<Footer />
</PageLayout>

<script>
	const scrollBtn = document.getElementById(
		"ScrollTopBtn"
	) as HTMLButtonElement;
	const targetHeader = document.getElementById("blog-hero") as HTMLDivElement;

	function callback(entries: IntersectionObserverEntry[]) {
		entries.forEach((entry) => {
			// only show the scroll to top button when the heading is out of view
			scrollBtn.dataset.show = (!entry.isIntersecting).toString();
		});
	}

	scrollBtn.addEventListener("click", () => {
		document.documentElement.scrollTo({ behavior: "smooth", top: 0 });
	});

	const observer = new IntersectionObserver(callback);
	observer.observe(targetHeader);
</script>
